{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\tictactoe-project\\\\frontend-react\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://127.0.0.1:8000\";\nconst App = () => {\n  _s();\n  const [gameId, setGameId] = useState(null);\n  const [board, setBoard] = useState(Array(9).fill(\" \"));\n  const [currentPlayer, setCurrentPlayer] = useState(\"x\");\n  const [winner, setWinner] = useState(null);\n  const [gameOver, setGameOver] = useState(false);\n  const [winnerLine, setWinnerLine] = useState([]); // for highlighting winning cells\n\n  const startNewGame = async () => {\n    try {\n      const newId = uuidv4();\n      setGameId(newId);\n      const response = await axios.post(`${API_URL}/new-game`, {\n        game_id: newId\n      });\n      setBoard(response.data.board);\n      setWinner(response.data.winner);\n      setGameOver(response.data.game_over);\n      setCurrentPlayer(response.data.current_player);\n      setWinnerLine([]);\n    } catch (error) {\n      console.error(\"Error starting new game:\", error);\n      alert(\"Cannot connect to backend. Make sure FastAPI is running.\");\n    }\n  };\n  const handleMove = async pos => {\n    if (gameOver || board[pos] !== \" \" || currentPlayer !== \"o\") return;\n    try {\n      const response = await axios.post(`${API_URL}/make-move`, {\n        game_id: gameId,\n        position: pos\n      });\n      setBoard(response.data.board);\n      setWinner(response.data.winner);\n      setGameOver(response.data.game_over);\n      setCurrentPlayer(response.data.current_player);\n\n      // Highlight winning line if game is over\n      if (response.data.game_over && response.data.winner !== 0) {\n        highlightWinningLine(response.data.board, response.data.winner);\n      }\n    } catch (error) {\n      console.error(\"Error making move:\", error);\n    }\n  };\n\n  // Dummy function to highlight winning line (optional)\n  const highlightWinningLine = (board, winner) => {\n    // You can implement logic to detect winning combination here\n    // Example: [0,1,2] if top row wins\n    setWinnerLine([]); // currently empty; optional enhancement\n  };\n  const renderCell = i => /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => handleMove(i),\n    className: `cell ${winnerLine.includes(i) ? \"winner\" : \"\"}`,\n    disabled: board[i] !== \" \" || gameOver || currentPlayer !== \"o\",\n    children: board[i]\n  }, i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n  useEffect(() => {\n    startNewGame();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tic Tac Toe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: board.map((_, i) => renderCell(i))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), gameOver ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: winner === 1 ? \"AI (X) wins!\" : winner === -1 ? \"You (O) win!\" : \"Draw!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"current-turn\",\n      children: [\"Current Turn: \", currentPlayer.toUpperCase()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"new-game\",\n      onClick: startNewGame,\n      children: \"New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"3Nmu/ZEsSPj6JjZh+Ma4aO6O3FQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","v4","uuidv4","jsxDEV","_jsxDEV","API_URL","App","_s","gameId","setGameId","board","setBoard","Array","fill","currentPlayer","setCurrentPlayer","winner","setWinner","gameOver","setGameOver","winnerLine","setWinnerLine","startNewGame","newId","response","post","game_id","data","game_over","current_player","error","console","alert","handleMove","pos","position","highlightWinningLine","renderCell","i","onClick","className","includes","disabled","children","fileName","_jsxFileName","lineNumber","columnNumber","map","_","toUpperCase","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/tictactoe-project/frontend-react/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport \"./App.css\";\r\n\r\nconst API_URL = \"http://127.0.0.1:8000\";\r\n\r\nconst App = () => {\r\n  const [gameId, setGameId] = useState(null);\r\n  const [board, setBoard] = useState(Array(9).fill(\" \"));\r\n  const [currentPlayer, setCurrentPlayer] = useState(\"x\");\r\n  const [winner, setWinner] = useState(null);\r\n  const [gameOver, setGameOver] = useState(false);\r\n  const [winnerLine, setWinnerLine] = useState([]); // for highlighting winning cells\r\n\r\n  const startNewGame = async () => {\r\n    try {\r\n      const newId = uuidv4();\r\n      setGameId(newId);\r\n\r\n      const response = await axios.post(`${API_URL}/new-game`, { game_id: newId });\r\n      setBoard(response.data.board);\r\n      setWinner(response.data.winner);\r\n      setGameOver(response.data.game_over);\r\n      setCurrentPlayer(response.data.current_player);\r\n      setWinnerLine([]);\r\n    } catch (error) {\r\n      console.error(\"Error starting new game:\", error);\r\n      alert(\"Cannot connect to backend. Make sure FastAPI is running.\");\r\n    }\r\n  };\r\n\r\n  const handleMove = async (pos) => {\r\n    if (gameOver || board[pos] !== \" \" || currentPlayer !== \"o\") return;\r\n\r\n    try {\r\n      const response = await axios.post(`${API_URL}/make-move`, {\r\n        game_id: gameId,\r\n        position: pos,\r\n      });\r\n\r\n      setBoard(response.data.board);\r\n      setWinner(response.data.winner);\r\n      setGameOver(response.data.game_over);\r\n      setCurrentPlayer(response.data.current_player);\r\n\r\n      // Highlight winning line if game is over\r\n      if (response.data.game_over && response.data.winner !== 0) {\r\n        highlightWinningLine(response.data.board, response.data.winner);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error making move:\", error);\r\n    }\r\n  };\r\n\r\n  // Dummy function to highlight winning line (optional)\r\n  const highlightWinningLine = (board, winner) => {\r\n    // You can implement logic to detect winning combination here\r\n    // Example: [0,1,2] if top row wins\r\n    setWinnerLine([]); // currently empty; optional enhancement\r\n  };\r\n\r\n  const renderCell = (i) => (\r\n    <button\r\n      key={i}\r\n      onClick={() => handleMove(i)}\r\n      className={`cell ${winnerLine.includes(i) ? \"winner\" : \"\"}`}\r\n      disabled={board[i] !== \" \" || gameOver || currentPlayer !== \"o\"}\r\n    >\r\n      {board[i]}\r\n    </button>\r\n  );\r\n\r\n  useEffect(() => {\r\n    startNewGame();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <h1>Tic Tac Toe</h1>\r\n      <div className=\"board\">{board.map((_, i) => renderCell(i))}</div>\r\n      {gameOver ? (\r\n        <h2>\r\n          {winner === 1\r\n            ? \"AI (X) wins!\"\r\n            : winner === -1\r\n            ? \"You (O) win!\"\r\n            : \"Draw!\"}\r\n        </h2>\r\n      ) : (\r\n        <div className=\"current-turn\">Current Turn: {currentPlayer.toUpperCase()}</div>\r\n      )}\r\n      <button className=\"new-game\" onClick={startNewGame}>\r\n        New Game\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}